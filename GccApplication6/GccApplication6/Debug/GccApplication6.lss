
GccApplication6.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000c4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000014  00800060  000000c4  00000138  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000014c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000017c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000001b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000067e  00000000  00000000  000001d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000056a  00000000  00000000  00000856  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000028b  00000000  00000000  00000dc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  0000104c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000031a  00000000  00000000  00001070  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000fc  00000000  00000000  0000138a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001486  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	24 c0       	rjmp	.+72     	; 0x4c <__bad_interrupt>
   4:	23 c0       	rjmp	.+70     	; 0x4c <__bad_interrupt>
   6:	22 c0       	rjmp	.+68     	; 0x4c <__bad_interrupt>
   8:	21 c0       	rjmp	.+66     	; 0x4c <__bad_interrupt>
   a:	20 c0       	rjmp	.+64     	; 0x4c <__bad_interrupt>
   c:	1f c0       	rjmp	.+62     	; 0x4c <__bad_interrupt>
   e:	1e c0       	rjmp	.+60     	; 0x4c <__bad_interrupt>
  10:	1d c0       	rjmp	.+58     	; 0x4c <__bad_interrupt>
  12:	1c c0       	rjmp	.+56     	; 0x4c <__bad_interrupt>
  14:	1b c0       	rjmp	.+54     	; 0x4c <__bad_interrupt>
  16:	1a c0       	rjmp	.+52     	; 0x4c <__bad_interrupt>
  18:	19 c0       	rjmp	.+50     	; 0x4c <__bad_interrupt>
  1a:	18 c0       	rjmp	.+48     	; 0x4c <__bad_interrupt>
  1c:	17 c0       	rjmp	.+46     	; 0x4c <__bad_interrupt>
  1e:	16 c0       	rjmp	.+44     	; 0x4c <__bad_interrupt>
  20:	15 c0       	rjmp	.+42     	; 0x4c <__bad_interrupt>
  22:	14 c0       	rjmp	.+40     	; 0x4c <__bad_interrupt>
  24:	13 c0       	rjmp	.+38     	; 0x4c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	e4 ec       	ldi	r30, 0xC4	; 196
  3a:	f0 e0       	ldi	r31, 0x00	; 0
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	a4 37       	cpi	r26, 0x74	; 116
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>
  48:	02 d0       	rcall	.+4      	; 0x4e <main>
  4a:	3a c0       	rjmp	.+116    	; 0xc0 <_exit>

0000004c <__bad_interrupt>:
  4c:	d9 cf       	rjmp	.-78     	; 0x0 <__vectors>

0000004e <main>:


int main(void)
{
	unsigned int number = 0;
	SEG7_DDR = 0b11111111;
  4e:	8f ef       	ldi	r24, 0xFF	; 255
  50:	81 bb       	out	0x11, r24	; 17
	SEG7_PORT = 0b00000000;
  52:	12 ba       	out	0x12, r1	; 18
	DDRB = 0b00000000;
  54:	17 ba       	out	0x17, r1	; 23
	PORTD = 0b11000000;
  56:	80 ec       	ldi	r24, 0xC0	; 192
  58:	82 bb       	out	0x12, r24	; 18



int main(void)
{
	unsigned int number = 0;
  5a:	20 e0       	ldi	r18, 0x00	; 0
  5c:	30 e0       	ldi	r19, 0x00	; 0
	PORTD = 0b11000000;
		
	while (1)
	{
		
		SEG7_PORT = digits [number];
  5e:	f9 01       	movw	r30, r18
  60:	ee 0f       	add	r30, r30
  62:	ff 1f       	adc	r31, r31
  64:	e0 5a       	subi	r30, 0xA0	; 160
  66:	ff 4f       	sbci	r31, 0xFF	; 255
  68:	80 81       	ld	r24, Z
  6a:	82 bb       	out	0x12, r24	; 18
		
		
		if((PINB == 0b01000000) && (number < 9))
  6c:	86 b3       	in	r24, 0x16	; 22
  6e:	80 34       	cpi	r24, 0x40	; 64
  70:	91 f4       	brne	.+36     	; 0x96 <main+0x48>
  72:	29 30       	cpi	r18, 0x09	; 9
  74:	31 05       	cpc	r19, r1
  76:	78 f4       	brcc	.+30     	; 0x96 <main+0x48>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  78:	8b e7       	ldi	r24, 0x7B	; 123
  7a:	92 e9       	ldi	r25, 0x92	; 146
  7c:	01 97       	sbiw	r24, 0x01	; 1
  7e:	f1 f7       	brne	.-4      	; 0x7c <main+0x2e>
  80:	00 c0       	rjmp	.+0      	; 0x82 <main+0x34>
  82:	00 00       	nop
		{
			_delay_ms(150);
			number++;
  84:	2f 5f       	subi	r18, 0xFF	; 255
  86:	3f 4f       	sbci	r19, 0xFF	; 255
  88:	8b e7       	ldi	r24, 0x7B	; 123
  8a:	92 e9       	ldi	r25, 0x92	; 146
  8c:	01 97       	sbiw	r24, 0x01	; 1
  8e:	f1 f7       	brne	.-4      	; 0x8c <main+0x3e>
  90:	00 c0       	rjmp	.+0      	; 0x92 <main+0x44>
  92:	00 00       	nop
  94:	e4 cf       	rjmp	.-56     	; 0x5e <main+0x10>
			_delay_ms(150);
		}
		
		else if ((PINB == 0b10000000) && (number > 0))
  96:	86 b3       	in	r24, 0x16	; 22
  98:	80 38       	cpi	r24, 0x80	; 128
  9a:	09 f7       	brne	.-62     	; 0x5e <main+0x10>
  9c:	21 15       	cp	r18, r1
  9e:	31 05       	cpc	r19, r1
  a0:	f1 f2       	breq	.-68     	; 0x5e <main+0x10>
  a2:	8b e7       	ldi	r24, 0x7B	; 123
  a4:	92 e9       	ldi	r25, 0x92	; 146
  a6:	01 97       	sbiw	r24, 0x01	; 1
  a8:	f1 f7       	brne	.-4      	; 0xa6 <main+0x58>
  aa:	00 c0       	rjmp	.+0      	; 0xac <main+0x5e>
  ac:	00 00       	nop
		{
			_delay_ms(150);
			number--;
  ae:	21 50       	subi	r18, 0x01	; 1
  b0:	31 09       	sbc	r19, r1
  b2:	8b e7       	ldi	r24, 0x7B	; 123
  b4:	92 e9       	ldi	r25, 0x92	; 146
  b6:	01 97       	sbiw	r24, 0x01	; 1
  b8:	f1 f7       	brne	.-4      	; 0xb6 <main+0x68>
  ba:	00 c0       	rjmp	.+0      	; 0xbc <main+0x6e>
  bc:	00 00       	nop
  be:	cf cf       	rjmp	.-98     	; 0x5e <main+0x10>

000000c0 <_exit>:
  c0:	f8 94       	cli

000000c2 <__stop_program>:
  c2:	ff cf       	rjmp	.-2      	; 0xc2 <__stop_program>
